import 'dart:io';
import 'package:flutter/material.dart';
import '../../../../services/file_service.dart';

class FileTestScreen extends StatefulWidget {
  const FileTestScreen({super.key});

  @override
  State<FileTestScreen> createState() => _FileTestScreenState();
}

class _FileTestScreenState extends State<FileTestScreen> {
  final FileService _fileService = FileService();
  bool _isLoading = false;
  String _status = '–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é';
  String? _lastError;

  @override
  void dispose() {
    _fileService.dispose();
    super.dispose();
  }

  Future<void> _testConnection() async {
    setState(() {
      _isLoading = true;
      _status = '–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...';
      _lastError = null;
    });

    try {
      final result = await _fileService.testConnection();
      
      setState(() {
        _isLoading = false;
        if (result.success) {
          _status = '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!';
        } else {
          _status = '‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
          _lastError = result.error ?? '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Yandex Storage';
        }
      });
    } catch (e) {
      setState(() {
        _isLoading = false;
        _status = '‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
        _lastError = e.toString();
      });
    }
  }

  Future<void> _uploadTestFile() async {
    setState(() {
      _isLoading = true;
      _status = '–í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª...';
      _lastError = null;
    });

    try {
      final file = await _fileService.pickFile();
      
      if (file == null) {
        setState(() {
          _isLoading = false;
          _status = '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω';
        });
        return;
      }

      setState(() {
        _status = '–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª...';
      });

      final result = await _fileService.uploadFile(
        file: file,
        chatId: 'test-chat-${DateTime.now().millisecondsSinceEpoch}',
      );

      setState(() {
        _isLoading = false;
        if (result.success) {
          _status = '‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n–ö–ª—é—á: ${result.fileKey}\nURL: ${result.fileUrl}';
        } else {
          _status = '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏';
          _lastError = result.error;
        }
      });
    } catch (e) {
      setState(() {
        _isLoading = false;
        _status = '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏';
        _lastError = e.toString();
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞'),
        backgroundColor: Colors.blue,
        foregroundColor: Colors.white,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      '–°—Ç–∞—Ç—É—Å:',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 8),
                    Text(
                      _status,
                      style: const TextStyle(fontSize: 16),
                    ),
                    if (_lastError != null) ...[
                      const SizedBox(height: 8),
                      Container(
                        padding: const EdgeInsets.all(8),
                        decoration: BoxDecoration(
                          color: Colors.red.shade50,
                          border: Border.all(color: Colors.red.shade200),
                          borderRadius: BorderRadius.circular(4),
                        ),
                        child: Text(
                          '–û—à–∏–±–∫–∞: $_lastError',
                          style: TextStyle(
                            color: Colors.red.shade700,
                            fontSize: 14,
                          ),
                        ),
                      ),
                    ],
                  ],
                ),
              ),
            ),
            const SizedBox(height: 16),
            ElevatedButton.icon(
              onPressed: _isLoading ? null : _testConnection,
              icon: const Icon(Icons.wifi),
              label: const Text('–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green,
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16),
              ),
            ),
            const SizedBox(height: 8),
            ElevatedButton.icon(
              onPressed: _isLoading ? null : _uploadTestFile,
              icon: const Icon(Icons.upload_file),
              label: const Text('–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.blue,
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16),
              ),
            ),
            if (_isLoading) ...[
              const SizedBox(height: 16),
              const Center(
                child: CircularProgressIndicator(),
              ),
            ],
            const Spacer(),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.orange.shade50,
                border: Border.all(color: Colors.orange.shade200),
                borderRadius: BorderRadius.circular(8),
              ),
              child: const Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'üìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:',
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                    ),
                  ),
                  SizedBox(height: 8),
                  Text(
                    '1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Yandex Storage –≤ —Ñ–∞–π–ª–µ:\n   lib/src/config/yandex_storage_config.dart\n\n'
                    '2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n'
                    '3. –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞\n\n'
                    '4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ - –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ —á–∞—Ç',
                    style: TextStyle(fontSize: 14),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
