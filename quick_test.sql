-- ========================================
-- –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ü–†–û–ë–õ–ï–ú–´
-- ========================================

-- 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
SELECT 
    'Current user' as test,
    auth.uid() as user_id,
    CASE 
        WHEN auth.uid() IS NOT NULL THEN '‚úÖ Authenticated'
        ELSE '‚ùå Not authenticated'
    END as status;

-- 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
SELECT 
    'Available teams' as test,
    tm.team_id,
    tm.role,
    t.name as team_name
FROM team_members tm
JOIN teams t ON t.id = tm.team_id
WHERE tm.user_id = auth.uid()
LIMIT 5;

-- 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
SELECT 
    'Available chats' as test,
    c.id as chat_id,
    c.team_id,
    c.type,
    t.name as team_name
FROM chats c
JOIN teams t ON t.id = c.team_id
JOIN team_members tm ON tm.team_id = c.team_id
WHERE tm.user_id = auth.uid()
AND c.type = 'team_main'
LIMIT 5;

-- 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é send_chat_message —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
DO $$
DECLARE
    v_team_id UUID;
    v_chat_id UUID;
    v_result UUID;
    v_error TEXT;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∫–æ–º–∞–Ω–¥—É
    SELECT tm.team_id INTO v_team_id
    FROM team_members tm
    WHERE tm.user_id = auth.uid()
    LIMIT 1;
    
    IF v_team_id IS NULL THEN
        RAISE NOTICE '‚ùå No teams found for current user';
        RETURN;
    END IF;
    
    -- –ü–æ–ª—É—á–∞–µ–º chat_id –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    SELECT c.id INTO v_chat_id
    FROM chats c
    WHERE c.team_id = v_team_id AND c.type = 'team_main'
    LIMIT 1;
    
    IF v_chat_id IS NULL THEN
        RAISE NOTICE '‚ùå No team_main chat found for team %', v_team_id;
        RETURN;
    END IF;
    
    RAISE NOTICE 'üîç Testing with team_id: %, chat_id: %', v_team_id, v_chat_id;
    
    -- –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    BEGIN
        SELECT send_chat_message(v_team_id, 'Test message from diagnostic', 'text') INTO v_result;
        RAISE NOTICE '‚úÖ send_chat_message SUCCESS! Returned message_id: %', v_result;
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–ª–æ—Å—å
        IF EXISTS (SELECT 1 FROM messages WHERE id = v_result) THEN
            RAISE NOTICE '‚úÖ Message confirmed in database';
        ELSE
            RAISE NOTICE '‚ö†Ô∏è Message not found in database';
        END IF;
        
    EXCEPTION 
        WHEN OTHERS THEN
            v_error := SQLERRM;
            RAISE NOTICE '‚ùå send_chat_message ERROR: %', v_error;
            
            -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            IF v_error LIKE '%User not authenticated%' THEN
                RAISE NOTICE 'üí° Issue: User authentication problem';
            ELSIF v_error LIKE '%Chat not found%' THEN
                RAISE NOTICE 'üí° Issue: Chat not found for team';
            ELSIF v_error LIKE '%permission%' THEN
                RAISE NOTICE 'üí° Issue: RLS policy violation';
            ELSE
                RAISE NOTICE 'üí° Issue: Unknown error';
            END IF;
    END;
END $$;

-- 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è messages
SELECT 
    'Messages RLS policies' as test,
    policyname,
    permissive,
    roles,
    cmd,
    qual
FROM pg_policies 
WHERE tablename = 'messages';

-- 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
SELECT 
    'Recent messages' as test,
    id,
    chat_id,
    author_id,
    content,
    msg_type,
    type,
    created_at
FROM messages 
ORDER BY created_at DESC
LIMIT 3;
